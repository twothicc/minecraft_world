{
  "format_version": "1.8.0",
  "animations": {
    "animation.cmm.attack.rotations": {
      "loop": true,
      "bones": {
        "Body": {
          "rotation": [ 0, "math.sin(math.sqrt(variable.attack_time) * 360) * 11.46 - this", 0 ]
        },
        "LeftArm": {
          "rotation": [ "math.sin(math.sqrt(variable.attack_time) * 360) * 11.46", 0, 0 ]
        },
        "RightArm": {
          "rotation": [ "math.sin(1.0 - math.pow(1.0 - variable.attack_time, 3.0) * 180.0) * (variable.is_brandishing_spear ? -1.0 : 1.0 )", "variable.is_brandishing_spear ? 0.0 : (math.sin(math.sqrt(variable.attack_time) * 360) * 11.46) * 2.0", 0 ]
        }
      }
    },
    "animation.cmm.base_pose": {
      "loop": true,
      "bones": {
        "waist": {
          "rotation": [ 0, 0, 0 ]
        }
      }
    },
    "animation.cmm.big_head": {
      "loop": true,
      "bones": {
        "Head": {
          "scale": 1.4
        }
      }
    },
    "animation.cmm.bob": {
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": [ 0, 0, "((math.cos(query.life_time * 103.2) * 2.865) + 2.865) *-1.0" ]
        },
        "RightArm": {
          "rotation": [ 0, 0, "(math.cos(query.life_time * 103.2) * 2.865) + 2.865" ]
        }
      }
    },
    "animation.cmm.bob.v2": {
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": [ 0, 0, "((math.cos(query.life_time * 130) * 5.73) + 5.73) *-1.0" ]
        },
        "RightArm": {
          "rotation": [ 0, 0, "(math.cos(query.life_time * 130) * 5.73) + 5.73" ]
        }
      }
    },
    "animation.cmm.bob.v3": {
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": [ 0, 0, "((math.cos(query.life_time * 130) * 5.06) + 5.06) *-1.0" ]
        },
        "RightArm": {
          "rotation": [ 0, 0, "(math.cos(query.life_time * 130) * 5.06) + 5.06" ]
        }
      }
    },
    "animation.cmm.bow_and_arrow": {
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": [ "query.target_x_rotation - 90.0 - math.sin(query.life_time * 76.8) * 2.865 - this", "query.target_y_rotation + 28.65", "-(math.cos(query.life_time * 103.2) * 2.865) - 2.865" ]
        },
        "RightArm": {
          "rotation": [ "query.target_x_rotation - 90.0 + math.sin(query.life_time * 76.8) * 2.865 - this", "query.target_y_rotation - 5.73", "(math.cos(query.life_time * 103.2) * 2.865) + 2.865" ]
        }
      }
    },
    "animation.cmm.brandish_spear": {
      "loop": true,
      "bones": {
        "RightArm": {
          "rotation": [ "this * -0.5 - 157.5 - 22.5 * variable.charge_amount", "-this", 0 ]
        }
      }
    },
    "animation.cmm.celebrating": {
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": [ "(math.cos(query.life_time * 800.0) * 2.865)", 180, -135 ]
        },
        "RightArm": {
          "rotation": [ "(math.cos(query.life_time * 800.0) * 2.865)", 180, 135 ]
        }
      }
    },
    "animation.cmm.charging": {
      "loop": true,
      "bones": {
        "RightArm": {
          "rotation": [ "22.5 * variable.charge_amount - this", "-this", 0 ]
        }
      }
    },
    "animation.cmm.damage_nearby_mobs": {
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": [ "-45.0-this", "-this", "-this" ]
        },
        "LeftLeg": {
          "rotation": [ "45.0-this", "-this", "-this" ]
        },
        "RightArm": {
          "rotation": [ "45.0-this", "-this", "-this" ]
        },
        "RightLeg": {
          "rotation": [ "-45.0-this", "-this", "-this" ]
        }
      }
    },
    "animation.cmm.holding": {
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": [ "variable.is_holding_left ? (-this * 0.5 - 18.0) : 0.0", 0, 0 ]
        },
        "RightArm": {
          "rotation": [ "variable.is_holding_right ? (-this * 0.5 - 18.0) : 0.0", 0, 0 ]
        }
      }
    },
    "animation.cmm.look_at_target.default": {
      "loop": true,
      "bones": {
        "Head": {
          "relative_to": { "rotation": "entity" },
          "rotation": [ "query.target_x_rotation", "query.target_y_rotation", 0 ]
        },
        "Neck": {
          "relative_to": { "rotation": "entity" },
          "rotation": [ 0, "query.target_y_rotation * 0.5", 0 ]
        },
        "Neck1": {
          "relative_to": { "rotation": "entity" },
          "rotation": [ 0, "query.target_y_rotation * 0.5", 0 ]
        }
      }
    },
    "animation.cmm.look_at_target.gliding": {
      "loop": true,
      "bones": {
        "Head": {
          "rotation": [ -45, "query.target_y_rotation", 0 ]
        },
        "Neck": {
          "rotation": [ 0, "query.target_y_rotation * 0.5", 0 ]
        },
        "Neck1": {
          "rotation": [ 0, "query.target_y_rotation * 0.5", 0 ]
        }
      }
    },
    "animation.cmm.look_at_target.swimming": {
      "loop": true,
      "bones": {
        "Head": {
          "rotation": [ "math.lerp(query.target_x_rotation, -45.0, variable.swim_amount)", "query.target_y_rotation", 0 ]
        },
        "Neck": {
          "rotation": [ 0, "query.target_y_rotation * 0.5", 0 ]
        },
        "Neck1": {
          "rotation": [ 0, "query.target_y_rotation * 0.5", 0 ]
        }
      }
    },
    "animation.cmm.jump.arms": {
      "loop": true,
      "bones": {
        "RightArm": {
          "rotation": [ -132.8, 32.41, -5.73 ]
        },
        "LeftArm": {
          "rotation": [ -132.8, -32.41, 5.73 ]
        }
      }
    },
    "animation.cmm.move": {
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": [ "variable.tcos0", 0, 0 ]
        },
        "LeftLeg": {
          "rotation": [ "variable.tcos0 * -1.4", 0, 0 ]
        },
        "RightArm": {
          "rotation": [ "-variable.tcos0", 0, 0 ]
        },
        "RightLeg": {
          "rotation": [ "variable.tcos0 * 1.4", 0, 0 ]
        }
      }
    },
    "animation.cmm.move.legs": {
      "loop": true,
      "bones": {
        "LeftLeg": {
          "rotation": [ "variable.tcos0 * -1.4", 0, 0 ]
        },
        "RightLeg": {
          "rotation": [ "variable.tcos0 * 1.4", 0, 0 ]
        }
      }
    },
    "animation.cmm.walk": {
      "anim_time_update" : "query.modified_distance_moved",
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": [ "math.cos(query.anim_time * 38.17) *  57.3", 0, 0 ]
        },
        "LeftLeg": {
          "rotation": [ "math.cos(query.anim_time * 38.17) *  57.3 * -1.4", 0, 0 ]
        },
        "RightArm": {
          "rotation": [ "-math.cos(query.anim_time * 38.17) *  57.3", 0, 0 ]
        },
        "RightLeg": {
          "rotation": [ "math.cos(query.anim_time * 38.17) *  57.3 * 1.4", 0, 0 ]
        }
      }
    },
    "animation.cmm.walk.legs": {
      "anim_time_update" : "query.modified_distance_moved",
      "loop": true,
      "bones": {
        "LeftLeg": {
          "rotation": [ "math.cos(query.anim_time * 38.17) *  57.3 * -1.4", 0, 0 ]
        },
        "RightLeg": {
          "rotation": [ "math.cos(query.anim_time * 38.17) *  57.3 * 1.4", 0, 0 ]
        }
      }
    },
    "animation.cmm.riding.arms": {
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": [ -36, 0, 0 ]
        },
        "RightArm": {
          "rotation": [ -36, 0, 0 ]
        }
      }
    },
    "animation.cmm.riding.legs": {
      "loop": true,
      "bones": {
        "LeftLeg": {
          "rotation": [ "-72.0 - this", "-18.0 - this", "-this" ]
        },
        "RightLeg": {
          "rotation": [ "-72.0 - this", "18.0 - this", "-this" ]
        }
      }
    },
    "animation.cmm.sneaking": {
      "loop": true,
      "bones": {
        "Body": {
          "rotation": [ "0.5 - this", 0, 0 ]
        },
        "Head": {
          "position": [ 0, 1, 0 ]
        },
        "LeftArm": {
          "rotation": [ 72, 0, 0 ]
        },
        "LeftLeg": {
          "position": [ 0, -3, 4 ]
        },
        "RightArm": {
          "rotation": [ 72, 0, 0 ]
        },
        "RightLeg": {
          "position": [ 0, -3, 4 ]
        }
      }
    },
    "animation.cmm.swimming": {
      "animation_length": 1.3,
      "loop": true,
      "bones": {
        "LeftArm": {
          "rotation": {
            "0.7": {
              "post": [ "math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.left_arm_swim_amount)", "math.lerp(this, 180.0, variable.left_arm_swim_amount)", "math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.left_arm_swim_amount)" ],
              "pre": [ "math.lerp(this, 0.0, variable.left_arm_swim_amount)", "math.lerp(this, 180.0, variable.left_arm_swim_amount)", "math.lerp(this, 180.0 - 0.01877 * (-65.0 * math.mod(query.modified_distance_moved, 26.0) + math.mod(query.modified_distance_moved, 26.0) * math.mod(query.modified_distance_moved, 26.0)), variable.left_arm_swim_amount)" ]
            },
            "1.1": [ "math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.left_arm_swim_amount)", "math.lerp(this, 180.0, variable.left_arm_swim_amount)", "math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.left_arm_swim_amount)" ],
            "1.3": {
              "post": [ "math.lerp(this, 90.0 - (22.5 * math.mod(query.modified_distance_moved, 26.0)), variable.left_arm_swim_amount)", "math.lerp(this, 180.0, variable.left_arm_swim_amount)", "math.lerp(this, 180.0, variable.left_arm_swim_amount)" ],
              "pre": [ "math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.left_arm_swim_amount)", "math.lerp(this, 180.0, variable.left_arm_swim_amount)", "math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.left_arm_swim_amount)" ]
            }
          }
        },
        "LeftLeg": {
          "rotation": [ "math.lerp(this, math.cos(query.modified_distance_moved * 19.5 + 180.0) * 17.2, variable.left_arm_swim_amount) - this", 0.0, 0.0 ]
        },
        "RightArm": {
          "rotation": {
            "0.7": {
              "post": [ "math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.right_arm_swim_amount)", "math.lerp(this, 180.0, variable.right_arm_swim_amount)", "math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.right_arm_swim_amount)" ],
              "pre": [ "math.lerp(this, 0.0, variable.right_arm_swim_amount)", "math.lerp(this, 180.0, variable.right_arm_swim_amount)", "math.lerp(this, -0.1019 * (-65.0 * math.mod(query.modified_distance_moved, 26.0) + math.mod(query.modified_distance_moved, 26.0) * math.mod(query.modified_distance_moved, 26.0)), variable.right_arm_swim_amount)" ]
            },
            "1.1": [ "math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.right_arm_swim_amount)", "math.lerp(this, 180.0, variable.right_arm_swim_amount)", "math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.right_arm_swim_amount)" ],
            "1.3": {
              "post": [ "math.lerp(this, 90.0 - (22.5 * math.mod(query.modified_distance_moved, 26.0)), variable.right_arm_swim_amount)", "math.lerp(this, 180.0, variable.right_arm_swim_amount)", "math.lerp(this, 180.0, variable.right_arm_swim_amount)" ],
              "pre": [ "math.lerp(this, 11.25 * math.mod(query.modified_distance_moved, 26.0), variable.right_arm_swim_amount)", "math.lerp(this, 180.0, variable.right_arm_swim_amount)", "math.lerp(this, 72.77 + 13.4 * math.mod(query.modified_distance_moved, 26.0), variable.right_arm_swim_amount)" ]
            }
          }
        },
        "RightLeg": {
          "rotation": [ "math.lerp(this, math.cos(query.modified_distance_moved * 19.5) * 17.2, variable.left_arm_swim_amount) - this", 0.0, 0.0 ]
        }
      }
    },
    "animation.cmm.use_item_progress": {
      "loop": true,
      "bones": {
        "RightArm": {
          "rotation": [ "variable.use_item_startup_progress * -60.0 + variable.use_item_interval_progress * 11.25", "variable.use_item_startup_progress * -22.5 + variable.use_item_interval_progress * 11.25", "variable.use_item_startup_progress * -5.625 + variable.use_item_interval_progress * 11.25" ]
        }
      }
    },
    "animation.cmm.fishing_rod": {
      "loop": true,
      "bones": {
        "RightArm": {
          "rotation": [ " -19.0 - this", "-this", "-this" ]
        }
      }
    }
  }
}